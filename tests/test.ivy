function getnumber(n) {
    return n;
}
print(getnum(5));

num = 43;
print(type(num.istrue));
num.istrue = function() {
    return "hello";
};
print(istrue(num));
print(type(num.istrue));
print(istype(num, "af"));
print(num.istype("nah"));
print(repr(istype(num, 'hey')));
print(istype(num, [1,2,3]));
print("changing istype");
num.istype = function(str) {
    if(str == num.inspect.type) {
        print("true");
        return true;
    } else {
        print("false");
        return false;
    }
};
num.istype = function(str) {
    return num.inspect.type;
};
print(num.istype.inspect.type);
print(istype(num, 'hey'));
print(repr(num));
print(repr(num.istype));
print(repr(istype(num, 'hey')));





// x = num.newObject("hey");
//
// // iterations & lists
//
// for (i in [1..5]) { ... }
//
// for (i in [1..5 :2]) { ... }
//
// for (i in "hello") { ... }
//
// for (i in [1, 2, 3]) { ... }
//
// while (true) { ... }


// // Inspection & Access
// object.inspect.*;
// object.access.*;
// object.inspect.name = ...;
// object.access.__dict__ = null;
// a = function(){
//     record = System.CallStack.peek();
// };
// // Objects
// Integer("34"); // 34
// Float("313.2"); // 313.2
// String(43); // '43'
// String(true); // 'true'
// String(false); // 'false'
// String(null); // ''
// Boolean(1); // true
// Boolean(0); // false
// Collection(1,2,3,4); // [1,2,3,4]
// // System Object Methods
// Object.become(true, false);
// // System Objects
// System.Lexer.addtoken();
// System.Lexer.tokenize();
// System.Parser.parse();
// System.Interpreter.evaluate();
// evaluate(); // same as above
// System.Interpreter.visit();
// // other
// rec = System.CallStack.peek();
// depth = rec.depth;
// members = rec.members;
